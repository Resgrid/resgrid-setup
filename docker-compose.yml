services:
  web:
    image: "resgridllc/resgridwebcore:latest"
    ports:
      - "5151:80"
    env_file:
      - .env
    restart: always
    networks:
      rgmain:
        ipv4_address: 172.16.193.51
    depends_on:
      - api
      - events
      - db
      - redis
      - rabbitmq
      - worker
    environment:
      - WAIT_HOSTS=db:5432,redis:6379,rabbitmq:15672,api:80
      - WAIT_TIMEOUT=300

  api:
    image: "resgridllc/resgridwebservices:latest"
    ports:
      - "5152:80"
    env_file:
      - .env
    restart: always
    networks:
      rgmain:
        ipv4_address: 172.16.193.52
    depends_on:
      - events
      - db
      - redis
      - rabbitmq
      - worker
    environment:
      - WAIT_HOSTS=db:5432,redis:6379,rabbitmq:15672,events:80
      - WAIT_TIMEOUT=300

  events:
    image: "resgridllc/resgridwebevents:latest"
    ports:
      - "5153:80"
    env_file:
      - .env
    restart: always
    networks:
      rgmain:
        ipv4_address: 172.16.193.53
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - WAIT_HOSTS=db:5432,redis:6379,rabbitmq:15672
      - WAIT_AFTER=120
      - WAIT_TIMEOUT=300

  worker:
    image: "resgridllc/resgridworkersconsole:latest"
    env_file:
      - .env
    restart: always
    networks:
      rgmain:
        ipv4_address: 172.16.193.54
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - WAIT_HOSTS=db:5432,redis:6379,rabbitmq:15672
      - WAIT_AFTER=90
      - WAIT_TIMEOUT=180

  db:
    image: 'postgres:latest'
    ports:
      - 5432:5432
    env_file:
      - .env
    networks:
      rgmain:
        ipv4_address: 172.16.193.55
    volumes:
      - ./docker-data/sql/:/var/lib/postgresql/data/
      - ./db/create-databases.sh:/create-databases.sh
      - ./db/custom-entrypoint.sh:/custom-entrypoint.sh
    command: >
      sh -c "
        chmod +x /custom-entrypoint.sh &&
        chmod +x /create-databases.sh &&
        /custom-entrypoint.sh
      "

  redis:
    image: "redis:alpine"
    command: redis-server --save 20 1 --loglevel warning --requirepass resgrid123
    ports:
     - "6379:6379"
    restart: always
    volumes:
      - ./docker-data/redis/data:/data
    networks:
      rgmain:
        ipv4_address: 172.16.193.56

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=resgrid
      - RABBITMQ_DEFAULT_PASS=Resgrid321!
    ports:
      - "5160:15672"
      - "5159:5672"
    restart: always
    networks:
      rgmain:
        ipv4_address: 172.16.193.57

  caddy:
    image: caddy:2.0.0-alpine
    restart: always
    env_file:
        - .env
    ports:
      - 80:80
      - 443:443
    networks:
        rgmain:
          ipv4_address: 172.16.193.60
    volumes:
      - ./docker-data/caddy/data/:/data
      - ./docker-data/caddy/config/:/config
      - ./docker-data/caddy/Caddyfile:/etc/caddy/Caddyfile

networks:
  rgmain:
    ipam:
      driver: default
      config:
        - subnet: 172.16.193.0/24